---
########################################################################
# File managed by Salt at <{{ source }}>.
# Your changes will be overwritten.
#
# Please check https://doc.arvados.org/master/admin/config.html for
# documentation about the parameters configured here.
########################################################################
{%- if arvados.release == 'development' %}
# (Experimental) Restart services automatically when config file
# changes are detected. Only supported by `arvados-server boot` in
# dev mode.
AutoReloadConfig: {{ arvados.auto_reload_config }}
{%- endif %}

Clusters:
  {{ arvados.cluster.name }}:

    SystemRootToken: {{ arvados.cluster.tokens.system_root | yaml_encode }}
    ManagementToken: {{ arvados.cluster.tokens.management | yaml_encode }}

    ForceLegacyAPI14: {{ arvados.cluster.force_legacy_api14 }}

    {# Login:
    {% if arvados.sso.use_controller %}
      GoogleClientID: "{{arvados.sso.google_client_id}}"
      GoogleClientSecret: "{{arvados.sso.google_client_secret}}"
    {% else %}
      ProviderAppSecret: "{{ arvados.cluster.tokens.provider_secret }}"
      ProviderAppID: arvados-server
    {% endif %}

    Users:
      NewUsersAreActive: true
      AutoAdminFirstUser: true
      AutoSetupNewUsers: true
    {% if arvados.users.default_vm_uuid is defined %}
      AutoSetupNewUsersWithVmUUID: {{ arvados.users.default_vm_uuid }}
    {% endif %}
      AutoSetupNewUsersWithRepository: {{ arvados.users.auto_setup_repository }} #}
    API:
      RailsSessionSecretToken: {{ arvados.cluster.tokens.rails_secret | yaml_encode }}
    {%- if 'API' in arvados.cluster %}
      {{ arvados.cluster.API | default('') | yaml(False) | indent(6) }}
    {%- endif %}

    Collections:
      BlobSigningKey: {{ arvados.cluster.secrets.blob_signing_key | yaml_encode }}
    {%- if 'Collections' in arvados.cluster %}
      {{ arvados.cluster.Collections | yaml(False) | indent(6) }}
    {%- endif %}

    TLS:
      Certificate: {{ arvados.cluster.tls.certificate | yaml_encode }}
      Key: {{ arvados.cluster.tls.key | yaml_encode }}
      Insecure: {{ arvados.cluster.tls.insecure }}

    Workbench:
      SecretKeyBase: {{ arvados.cluster.secrets.workbench_secret_key | yaml_encode }}
      SiteName: {{ arvados.cluster.name | upper }}
    {%- if 'Workbench' in arvados.cluster %}
      {{ arvados.cluster.Workbench | yaml(False) | indent(6) }}
    {%- endif %}

    {%- for section in [
        'AuditLogs',
        'Containers',
        'Git',
        'InstanceTypes',
        'Login',
        'Mail',
        'RemoteClusters',
        'SystemLogs',
        'Users',
        'Volumes'
      ]
    %}
      {%- if section in arvados.cluster %}
    {{ section }}:
      {{ arvados.cluster[section] | yaml(False) | indent(6) }}
      {%- endif %}
    {%- endfor %}

    ### DATABASE CONFIGURATION
    PostgreSQL:
      ConnectionPool: {{ arvados.cluster.database.connection_pool_max }}
      Connection:
        # All parameters here are passed to the PG client library in a connection string;
        # see https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-PARAMKEYWORDS
        dbname: {{ arvados.cluster.database.name }}
        host: {{ arvados.cluster.database.host }}
        password: {{ arvados.cluster.database.password | yaml_encode }}
        user: {{ arvados.cluster.database.user }}
        client_encoding: {{ arvados.cluster.database.client_encoding }}
        {%- if arvados.cluster.database.extra_conn_params is defined %}
        {{ arvados.cluster.database.extra_conn_params | yaml(False) | indent(8) }}
        {%- endif %}

    ### SERVICES URLs
    Services:
      {# # Composer: FIXME!!!
      Controller:
        ExternalURL: "https://{{ arvados.controller.hostname }}.{{ arvados.cluster.domain }}"
        InternalURLs:
          "http://localhost:{{ arvados.controller.service.port }}": {}
      DispatchCloud:
        InternalURLs:
          "http://localhost:{{ arvados.dispatcher.service.port }}": {}
      RailsAPI:
        InternalURLs:
          "http://localhost:{{ arvados.api.service.port }}": {}
      SSO:
        ExternalURL: "https://{{ arvados.sso.hostname }}.{{ arvados.cluster.domain }}"
      WebDAV:
        ExternalURL: https://{{ arvados.webdav.collections.hostname }}.{{ arvados.cluster.domain }}
        InternalURLs:
          "http://localhost:{{ arvados.keepweb.service.port }}": {} #}
      {# WebDAVDownload:
        ExternalURL: https://{{ arvados.webdav.download.hostname }}.{{ arvados.cluster.domain }}
      # WebShell: FIXME!!! #}
      {# Websocket:
        ExternalURL: wss://{{ arvados.websocket.hostname }}.{{ arvados.cluster.domain }}/websocket
        InternalURLs:
          "http://localhost:{{ arvados.websocket.service.port }}": {} 
      Workbench1:
        ExternalURL: "https://{{ arvados.workbench.hostname }}.{{ arvados.cluster.domain }}" 
         Workbench2:
        ExternalURL: "https://{{ arvados.workbench2.hostname }}.{{ arvados.cluster.domain }}" #}
      {# Keepproxy:
        ExternalURL: https://{{ arvados.keepproxy.hostname }}.{{ arvados.cluster.domain }}
        InternalURLs:
          "http://localhost:{{ arvados.keepproxy.service.port }}": {} #}
      {# Keepstore:
        InternalURLs:
          {% for host in arvados.keepstore.hosts -%}
          "http://{{host}}.{{ arvados.cluster.domain }}:{{ arvados.keepstore.service.port }}": {}
          {% endfor %}

    Containers:
      CloudVMs:
        # BootProbeCommand is a shell command that succeeds when an instance is ready for service
        BootProbeCommand: "sudo systemctl status docker"
      DispatchPrivateKey: |
        {{ arvados.containers.dispatch_private_key | indent( width=8, indentfirst=False) }} #}
    {%- for service in [
        'Composer',
        'Controller',
        'DispatchCloud',
        'GitHTTP',
        'GitSSH',
        'Health',
        'Keepbalance',
        'Keepproxy',
        'Keepstore',
        'Nodemanager',
        'RailsAPI',
        'SSO',
        'WebDAV',
        'WebDAVDownload',
        'WebShell',
        'Websocket',
        'Workbench1',
        'Workbench2',
      ]
    %}
      {%- if service in arvados.cluster.Services %}
      {{ service }}:
        {{ arvados.cluster.Services[service] | yaml(False) | indent(8) }}
      {%- endif %}
    {%- endfor %}
